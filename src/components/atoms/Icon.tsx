export interface IconProps {
  name: string;
  size?: "xs" | "sm" | "md" | "lg" | "xl" | number;
  color?: string;
  className?: string;
}

// Common icon SVG paths - you can expand this with your preferred icon set
const iconPaths: Record<string, string> = {
  chevronDown: "M19.5 8.25l-7.5 7.5-7.5-7.5",
  chevronUp: "M4.5 15.75l7.5-7.5 7.5 7.5",
  chevronLeft: "M15.75 19.5L8.25 12l7.5-7.5",
  chevronRight: "M8.25 4.5l7.5 7.5-7.5 7.5",
  check: "M4.5 12.75l6 6 9-13.5",
  x: "m6 6 12 12M6 18 18 6",
  plus: "M12 4.5v15m7.5-7.5h-15",
  minus: "M5 12h14",
  search: "m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607z",
  heart:
    "M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12z",
  star: "M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.386a.562.562 0 00-.182-.557l-4.204-3.602a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345L11.48 3.5z",
  info: "M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z",
  warning:
    "M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z",
  error: "M12 9v3.75m9-.75a9 9 0 11-18 0 9 9 0 0118 0zm-9 3.75h.008v.008H12V15.75z",
  twitter:
    "M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z",
  facebook:
    "M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z",
  instagram:
    "M12.017 0C5.396 0 .029 5.367.029 11.987c0 6.62 5.367 11.987 11.988 11.987c6.62 0 11.987-5.367 11.987-11.987C24.014 5.367 18.637.001 12.017.001zM12.017 5.838c3.386 0 6.131 2.745 6.131 6.131s-2.745 6.131-6.131 6.131-6.131-2.745-6.131-6.131 2.745-6.131 6.131-6.131zm-7.268 6.131c0-4.018 3.25-7.268 7.268-7.268s7.268 3.25 7.268 7.268-3.25 7.268-7.268 7.268-7.268-3.25-7.268-7.268zm14.52-7.565a1.704 1.704 0 11-3.408 0 1.704 1.704 0 013.408 0z",
  tiktok:
    "M19.321 5.562a5.124 5.124 0 01-.443-.258 6.228 6.228 0 01-1.137-.966c-.849-.849-1.312-1.956-1.312-3.133V.8h-3.099v14.083c0 1.156-.233 2.272-.678 3.233-.437.944-1.069 1.801-1.828 2.484-.759.683-1.644 1.208-2.564 1.522-.941.32-1.942.38-2.903.175a5.384 5.384 0 01-2.267-1.016 5.402 5.402 0 01-1.711-2.077 5.398 5.398 0 01-.384-2.847 5.408 5.408 0 011.016-2.267 5.402 5.402 0 012.077-1.711c.924-.437 1.942-.497 2.903-.175.32.107.627.258.909.443v-3.156a8.704 8.704 0 00-1.137-.076c-1.156 0-2.272.233-3.233.678a8.66 8.66 0 00-2.484 1.828 8.677 8.677 0 00-1.522 2.564 8.704 8.704 0 00-.175 2.903c.107.971.394 1.904.851 2.744a8.66 8.66 0 001.828 2.267 8.677 8.677 0 002.564 1.522c.96.32 1.973.38 2.933.175a8.704 8.704 0 002.744-.851 8.66 8.66 0 002.267-1.828 8.677 8.677 0 001.522-2.564c.32-.96.38-1.973.175-2.933-.076-.465-.203-.918-.384-1.351V9.422a9.215 9.215 0 003.099 1.711V7.854a6.228 6.228 0 01-2.292-2.292z",
};

export function Icon({ name, size = "md", color = "currentColor", className = "" }: IconProps): React.ReactNode | null {
  const sizeClasses = {
    xs: "h-3 w-3",
    sm: "h-4 w-4",
    md: "h-5 w-5",
    lg: "h-6 w-6",
    xl: "h-8 w-8",
  };

  const sizeClass = typeof size === "string" ? sizeClasses[size] : "";
  const customSize = typeof size === "number" ? { width: size, height: size } : {};

  const iconPath = iconPaths[name];

  if (!iconPath) {
    console.warn(`Icon "${name}" not found`);
    return null;
  }

  // Check if color is a Tailwind class (starts with text- or stroke-)
  const isTailwindClass = color.startsWith("text-") || color.startsWith("stroke-");

  // If it's a Tailwind class, apply it as className; otherwise use as stroke color
  const strokeColor = isTailwindClass ? "currentColor" : color;
  const colorClass = isTailwindClass ? color : "";

  return (
    <svg
      className={`${sizeClass} ${colorClass} ${className}`}
      style={customSize}
      fill="none"
      stroke={strokeColor}
      strokeWidth={1.5}
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path strokeLinecap="round" strokeLinejoin="round" d={iconPath} />
    </svg>
  );
}
